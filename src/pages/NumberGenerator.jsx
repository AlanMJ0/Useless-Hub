import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { ArrowLeft, Shuffle, Copy } from "lucide-react";

export default function NumberGenerator() {
  const [currentNumber, setCurrentNumber] = useState(42);
  const [generatedNumbers, setGeneratedNumbers] = useState([]);
  const [range, setRange] = useState({ min: 1, max: 100 });

  const generateNumber = () => {
    const min = Math.ceil(range.min);
    const max = Math.floor(range.max);
    const newNumber = Math.floor(Math.random() * (max - min + 1)) + min;
    setCurrentNumber(newNumber);
    setGeneratedNumbers(prev => [newNumber, ...prev.slice(0, 9)]);
  };

  const copyNumber = () => {
    navigator.clipboard.writeText(currentNumber.toString());
  };

  const getNumberFact = (num) => {
    const facts = [
      `${num} is definitely a number`,
      `${num} exists in the universe`,
      `${num} can be written with digits`,
      `${num} is not a letter`,
      `${num} is mathematically correct`,
      `${num} has been generated by this app`,
      `${num} is visible on your screen`,
      `${num} is a result of random chance`,
    ];
    return facts[Math.floor(Math.random() * facts.length)];
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-400 via-red-500 to-pink-500 p-8">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8">
          <Button
            variant="outline"
            asChild
            className="bg-white/20 hover:bg-white/30 text-white border-white/20"
          >
            <a href="/">
              <ArrowLeft className="mr-2 h-4 w-4" />
              Back to Home
            </a>
          </Button>
        </div>

        <div className="text-center mb-12">
          <h1 className="text-5xl font-bold text-white mb-4 drop-shadow-lg">
            🎲 Number Generator
          </h1>
          <p className="text-xl text-white/90 max-w-2xl mx-auto drop-shadow">
            Generate completely random numbers for absolutely no reason whatsoever. Science!
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="lg:col-span-2">
            <Card className="bg-white/10 backdrop-blur border-white/20 text-center">
              <CardHeader>
                <CardTitle className="text-white text-8xl font-mono">
                  {currentNumber}
                </CardTitle>
                <p className="text-white/80 text-lg italic">
                  "{getNumberFact(currentNumber)}"
                </p>
              </CardHeader>
              <CardContent className="space-y-6">
                <Button
                  onClick={generateNumber}
                  size="lg"
                  className="w-full h-16 text-xl bg-white/20 hover:bg-white/30 text-white border-white/20 transition-all hover:scale-105"
                >
                  <Shuffle className="mr-2 h-6 w-6" />
                  Generate Random Number
                </Button>
                
                <div className="flex gap-4 justify-center">
                  <Button
                    onClick={copyNumber}
                    variant="outline"
                    className="bg-white/20 hover:bg-white/30 text-white border-white/20"
                  >
                    <Copy className="mr-2 h-4 w-4" />
                    Copy Number
                  </Button>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="text-white/80 text-sm">Min Value</label>
                    <input
                      type="number"
                      value={range.min}
                      onChange={(e) => setRange(prev => ({ ...prev, min: parseInt(e.target.value) || 1 }))}
                      className="w-full p-2 rounded bg-white/20 text-white border border-white/20 placeholder-white/50"
                    />
                  </div>
                  <div>
                    <label className="text-white/80 text-sm">Max Value</label>
                    <input
                      type="number"
                      value={range.max}
                      onChange={(e) => setRange(prev => ({ ...prev, max: parseInt(e.target.value) || 100 }))}
                      className="w-full p-2 rounded bg-white/20 text-white border border-white/20 placeholder-white/50"
                    />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-6">
            <Card className="bg-white/10 backdrop-blur border-white/20">
              <CardHeader>
                <CardTitle className="text-white">📊 Number Facts</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="text-white/80">Current: {currentNumber}</div>
                  <div className="text-white/80">Is Even: {currentNumber % 2 === 0 ? "Yes" : "No"}</div>
                  <div className="text-white/80">Is Prime: Maybe</div>
                  <div className="text-white/80">Digits: {currentNumber.toString().length}</div>
                  <div className="text-white/80">Usefulness: 0%</div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-white/10 backdrop-blur border-white/20">
              <CardHeader>
                <CardTitle className="text-white">🕐 Recent Numbers</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-1 max-h-40 overflow-y-auto">
                  {generatedNumbers.length === 0 ? (
                    <p className="text-white/60 text-sm">No numbers generated yet...</p>
                  ) : (
                    generatedNumbers.map((number, index) => (
                      <div key={index} className="text-white/80 text-sm font-mono">
                        {number}
                      </div>
                    ))
                  )}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        <div className="text-center mt-8">
          <p className="text-white/70">
            "In the beginning was the Number, and the Number was with Random, and the Number was Random." 🔢
          </p>
        </div>
      </div>
    </div>
  );
}
